name: Deploy to Raspberry PI

on:
  push:
    branches:
      - feat/deploy-https

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: feat/deploy-https  

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -e

            APP_DIR="/home/devas/www/cards-without-humanity"
            REPO_URL="https://github.com/DevasNB/cards-without-humanity.git"
            BRANCH="feat/deploy-https"

            mkdir -p /home/devas/www

            # Clone/update repositório
            if [ ! -d "$APP_DIR/.git" ]; then
              git clone -b $BRANCH $REPO_URL "$APP_DIR"
            else
              cd "$APP_DIR"
              git fetch origin
              git checkout $BRANCH
              git reset --hard origin/$BRANCH
            fi

            cd "$APP_DIR"

            echo "Parando containers antigos..."
            docker compose down

            # 1️⃣ Levanta nginx apenas com HTTP para validação
            echo "Subindo nginx para desafio Let's Encrypt..."
            docker compose up -d --build nginx
            sleep 5

            # 2️⃣ Roda certbot para criar os certificados reais
            echo "Solicitando certificados SSL..."
            docker compose run --rm certbot certonly \
              --webroot -w /var/www/certbot \
              -d cards.devas.pt -d cardsapi.devas.pt \
              --email joaodevesa212@gmail.com \
              --agree-tos \
              --no-eff-email

            # 3️⃣ Atualiza nginx para HTTPS e sobe os apps
            echo "Subindo nginx + apps com HTTPS..."
            docker compose up -d --build frontend-ssr backend nginx

            # 4️⃣ Start do container certbot para renovações automáticas
            docker compose up -d certbot
